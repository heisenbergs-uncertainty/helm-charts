# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  # Streapipes backend image repository
  registry: apachestreampipes

  # This sets the pull policy for images.
  pullPolicy: Always

# Turn on DEBUG mode for the Backend Container
# Not reccomended for production due to the large amount of logs
debug: false

backend:
  # Override backend image name
  image: backend
  # Override the backend image tag - defaults to AppVersion
  tag: ""

  replicaCount: 1

  resources: {}

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0

  restartPolicy: "Always"

  # Turn this up if using couchDB included with helm chart to allow time for couchDB to spin up
  # Turn down if couchdb is already deployed as it will only slow down the rollout
  initialDelaySeconds: 15

  failureThreshold: 30

  periodSeconds: 10

  containerPort: 8030

  service:
    port: 8030
    type: ClusterIP

  # TODO: Add ability to reference existing claim
  persistence:
    accessModes:
      - ReadWriteOnce
    annotations": {}
    storageClass: "standard"
    path: "/Users/matthewholden/streampipes-k8s"
    size: 1Gi

ui:
  # Use this if you need to override the name of the ui container image
  image: ui

  # Override the backend image tag - defaults to AppVersion
  tag: ""

  replicaCount: 1

  resources: {}

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0

  restartPolicy: "Always"

  initialDelaySeconds: 60

  failureThreshold: 30

  periodSeconds: 30

  containerPort: 8088

  service:
    port: 8088
    type: LoadBalancer
    resolverActive: true
    resolver: kube-dns.kube-system.svc.cluster.local

extensions:
  iiot:
    # Use this if you need to override the name of the ui container image
    image: extensions-all-jvm

    # Override the backend image tag - defaults to AppVersion
    tag: ""

    replicaCount: 1

    resources: {}

    # This is for setting Kubernetes Annotations to a Pod.
    # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    podAnnotations: {}
    # This is for setting Kubernetes Labels to a Pod.
    # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    podLabels: {}

    podSecurityContext:
      {}
      # fsGroup: 2000

    securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    updateStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 0

    restartPolicy: "Always"

    initialDelaySeconds: 60

    failureThreshold: 30

    periodSeconds: 30

    containerPort: 8090

    service:
      port: 8090
      type: ClusterIP

streampipes:
  ingress:
    enabled: false
    className: nginx
    host:

  # if secret is not set, will generate secrets into '{release-name}-secrets'
  secrets:
    # use an existing secret (all secret keys are required)
    existingSecret: streampipes-secret
    # key from retrieving admin passowrd secret from existimngSecret
    adminPasswordSecretKey: sp-initial-admin-password
    # key from retrieving admin passowrd secret from existimngSecret
    clientSecretKey: sp-initial-client-secret
    # key from retrieving encrypiton passcode secret from existimngSecret
    encryptionPasscodeSecretKey: sp-encryption-password

  admin:
    # Sets the default admin login email
    email: admin@streampipes.apache.org
    # Set admin login pasword
    password: admin

  serviceUser:
    user: sp-service-client
    # If secret is left empty and no existing secret then it will be randomly generated
    # If not empty, must be at least 35 characters long
    secret:

  encryption:
    # If left empty will generate a random secret
    passcode:

  broker:
    # Set the message broker for default communication in streampipes
    # Can be kafka, nats, pulsar
    type: "kafka"

kafka:
  enabled: false

externalKafka:
  host: streampipes-kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local
  port: 9092

nats:
  enabled: false

pulsar:
  enabled: false

# CouchDB is included into this release for convenience
# it is reccomended to host it seperately from this release
# set couchdb.enabled = false and configure externalCouchdb
couchdb:
  # TODO: Test to ensure backend connects successfully to couchdb when initialized with helm chart
  enabled: false

  couchdbConfig.couchdb.uuid: decafbaddecafbaddecafbaddecafbad

  # DO NOT CHANGE - NOT CONFIGURED YET
  createAdminSecret: false

  adminUsername: admin

  adminPassword: admin

  adminHash: "1234"

  cookieAuthSecret: "1234"

  persistentVolume:
    enabled: "false"

    accessMode: ["ReadWriteOnce"]

    size: "10Gi"

    storageClass: "-"

# Required fields if couchdb.enabled = false
externalCouchdb:
  host: couchdb-svc-couchdb.couchdb.svc.cluster.local
  port: 5984

  # Required if existingSecret does not exist
  # Leave empty in existing secret does exist
  adminUsername: admin
  adminPassword: admin
  cookieAuthSecret: cookie
  erlangCookie: "1234"
  # Use an existing secret for the couchdb password
  existingSecret:
  # The key in the secrt containing the couchdb user
  adminUsernameKey: adminUsername
  # The key in the secret containing the couchdb password
  adminPasswordKey: adminPassword
  # The key in the secret containing the cookieAuthSecret
  cookieAuthSecretKey: cookieAuthSecret
  # The key in the secret containing the erlangCookie
  erlangCookieSecretKey: erlangCookie

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

influxdb:
  enabled: false

externalInfluxdb:
  host: influxdb.influxdb.svc.cluster.local
  port: 8086

  admin:
    password:
    token:

  existingSecret: influxdb-secret

  adminPasswordSecretKey: admin-user-password

  adminTokenSecretKey: admin-user-token

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# service:
# This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
# type: ClusterIP
# This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
# port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  host: "demo.localdev.me"
# hosts:
#   - host: chart-example.local
#     paths:
#       - path: /
#         pathType: ImplementationSpecific
# tls: []
#  - secretName: chart-example-tls
#    hosts:
#      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
